# local planner
# The name of the plugin for the local planner to use with move_base.
# This plugin must adhere to the nav_core::BaseLocalPlanner interface
# specified in the nav_core package.
#
# http://wiki.ros.org/nav_core#BaseLocalPlanner

# Move base
base_local_planner: "dwa_local_planner/DWAPlannerROS"

# Move base flex
controllers:
  - name: 'DWAPlannerROS'
    type: 'dwa_local_planner/DWAPlannerROS'

DWAPlannerROS:

# Robot Configuration Parameters - Kobuki
  max_vel_x: 0.33
  min_vel_x: 0.0

  max_vel_y: 0.0  # diff drive robot
  min_vel_y: 0.0  # diff drive robot

  max_vel_trans: 0.3 # choose slightly less than the base's capability
  min_vel_trans: 0.1  # this is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.1

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_vel_theta: 1.0  # choose slightly less than the base's capability
  min_vel_theta: 0.3  # this is the min angular velocity when there is negligible translational velocity
  theta_stopped_vel: 0.3

  acc_lim_x: 0.5
  acc_lim_theta: 1.0
  acc_lim_y: 0.0      # diff drive robot

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.3  # 18 degrees
  xy_goal_tolerance: 0.15  # 15 cm
  # latch_xy_goal_tolerance: false

# Forward Simulation Parameters
  sim_time: 1.0       # 1.7
  vx_samples: 6       # 3
  vy_samples: 1       # diff drive robot, there is only one sample
  vtheta_samples: 20  # 20

# Trajectory Scoring Parameters
  path_distance_bias: 64.0      # 32.0   - weighting for how much it should stick to the global path plan
  goal_distance_bias: 24.0      # 24.0   - wighting for how much it should attempt to reach its goal
  occdist_scale: 0.5            # 0.01   - weighting for how much the controller should avoid obstacles
  forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
  stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
  scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags

# Debugging
  publish_cost_grid: true

# Defines whether or not to eat up the plan as the robot moves along the path.
# If set to true, points will fall off the end of the plan once the robot moves 1 meter past them.
  prune_plan: true
